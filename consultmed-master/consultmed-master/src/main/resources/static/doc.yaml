---
openapi: 3.0.0
info:
  title: ConsultMed - API para Agendamento de Consultas Médicas.
  description: Serviços que realiza um CRUD no banco de dados.
  contact:
    name: Roberto Coutinho
    url: https://github.com/betocoutinho
    email: robertogmcfilho@gmail.com
  version: v1
servers:
- url: https://virtserver.swaggerhub.com/betocoutinho/ConsultMed/v1
  description: SwaggerHub API Auto Mocking
- url: http://localhost:8080/v1
paths:
  /consultorios:
    get:
      tags:
      - Consultorios
      summary: Retorna uma lista de consultorios.
      description: Retorna uma lista de consultorios do banco de dados
      responses:
        "200":
          description: lista retornada com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/consultorio'
        "400":
          description: Erro ao solicitar a lista
        "5XX":
          description: Exceção lançada
    post:
      tags:
      - Consultorios
      summary: Cria um novo consultorio.
      description: Cria um novo consultorio no banco de dados.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/consultorio'
        required: true
      responses:
        "200":
          description: Consultorio cadastrado com sucesso.
        "400":
          description: erro ao cadastrar o consultorio.
        "5XX":
          description: Exceção lançada.
  /consultorios/{id}:
    get:
      tags:
      - Consultorios
      summary: Retorna um consultorio pelo ID
      description: Retorna um consultorio pelo ID no banco de dados
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Consultorio encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consultorio'
        "404":
          description: Esse ID não foi encontrado
        "5XX":
          description: Exceção Lançada
    put:
      tags:
      - Consultorios
      summary: Atualiza o consultorio pelo Id
      description: Atualiza o consultorio pelo id no banco de dados
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/consultorio'
        required: true
      responses:
        "200":
          description: Atualização realizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consultorio'
        "400":
          description: Esse ID não existe.
        "5XX":
          description: Exceção Lançada.
    delete:
      tags:
      - Consultorios
      summary: deleta um consultorio.
      description: deleta um consultorio no banco de dados
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: exclusão realizada com sucesso
        "400":
          description: Id não encontrado
        "5XX":
          description: Exceção Lançada
  /enderecos:
    get:
      tags:
      - Endereços
      summary: Retorna uma lista de endereços.
      description: Retorna uma lista de endereços do banco de dados.
      responses:
        "200":
          description: lista retornada com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/endereco'
        "400":
          description: Erro ao solicitar a lista de endereços.
        "5XX":
          description: Exceção lançada
    post:
      tags:
      - Endereços
      summary: Cria um novo endereço.
      description: Cria um novo endereço no banco de dados.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/endereco'
        required: true
      responses:
        "200":
          description: Endereço cadastrado com sucesso.
        "400":
          description: erro ao cadastrar o Endereço.
        "5XX":
          description: Exceção lançada.
  /enderecos/{id}:
    get:
      tags:
      - Endereços
      summary: Retorna um endereço pelo ID
      description: Retorna um endereço pelo ID no banco de dados
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: endereço encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/endereco'
        "404":
          description: Esse ID não foi encontrado.
        "5XX":
          description: Exceção Lançada.
    put:
      tags:
      - Endereços
      summary: Atualiza o endereço pelo Id
      description: Atualiza o endereço pelo id no banco de dados
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/endereco'
        required: true
      responses:
        "200":
          description: Atualização realizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/endereco'
        "400":
          description: Esse ID não existe.
        "5XX":
          description: Exceção Lançada.
    delete:
      tags:
      - Endereços
      summary: deleta um endereço.
      description: deleta um endereço no banco de dados
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: exclusão realizada com sucesso
        "400":
          description: Id não encontrado
        "5XX":
          description: Exceção Lançada
  /especialidades:
    get:
      tags:
      - Especialidade Médica
      summary: Retorna uma lista de especialidade médica.
      description: Retorna uma lista de especialidade médica do banco de dados
      responses:
        "200":
          description: lista retornada com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/especialidadeMedica'
        "400":
          description: Erro ao solicitar a lista.
        "5XX":
          description: Exceção lançada
    post:
      tags:
      - Especialidade Médica
      summary: Cria um nova especialidade médica.
      description: Cria um nova especialidade médica no banco de dados.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/especialidadeMedica'
        required: true
      responses:
        "200":
          description: Especialidade médica cadastrado com sucesso.
        "400":
          description: erro ao cadastrar a especialidade médica.
        "5XX":
          description: Exceção lançada.
  /especialidades/{id}:
    get:
      tags:
      - Especialidade Médica
      summary: Retorna uma especialidade médica pelo ID
      description: Retorna uma especialidade médica pelo ID no banco de dados
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Consultorio encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/especialidadeMedica'
        "404":
          description: Esse ID não foi encontrado.
        "5XX":
          description: Exceção Lançada.
    put:
      tags:
      - Especialidade Médica
      summary: Atualiza a especialidade médica pelo Id
      description: Atualiza a especialidade médica pelo id no banco de dados
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/especialidadeMedica'
        required: true
      responses:
        "200":
          description: Atualização realizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/especialidadeMedica'
        "400":
          description: Esse ID não existe.
        "5XX":
          description: Exceção Lançada.
    delete:
      tags:
      - Especialidade Médica
      summary: deleta uma especialidade médica.
      description: deleta uma especialidade médica no banco de dados.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: exclusão realizada com sucesso.
        "400":
          description: Id não encontrado.
        "5XX":
          description: Exceção Lançada.
  /agendamentos:
    get:
      tags:
      - Agendamentos
      summary: Retorna uma lista de agendamentos.
      description: Retorna uma lista de agendamentos de consulta médicas do banco de dados
      responses:
        "200":
          description: lista retornada com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/fichaAgendamento'
        "400":
          description: Erro ao solicitar a lista.
        "5XX":
          description: Exceção lançada.
    post:
      tags:
      - Agendamentos
      summary: Cria uma nova consulta médica.
      description: Cria uma nova consulta médica no banco de dados.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fichaAgendamento'
        required: true
      responses:
        "200":
          description: Consulta cadastrada com sucesso.
        "400":
          description: erro ao cadastrar a consulta.
        "5XX":
          description: Exceção lançada.
  /agendamentos/{id}:
    get:
      tags:
      - Agendamentos
      summary: Retorna um agendamento pelo ID
      description: Retorna um agendamento pelo ID no banco de dados
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Consultorio encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fichaAgendamento'
        "404":
          description: Esse ID não foi encontrado
        "5XX":
          description: Exceção Lançada
    put:
      tags:
      - Agendamentos
      summary: Atualiza o agendamento pelo Id
      description: Atualiza o agendamento pelo id no banco de dados
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/consultorio'
        required: true
      responses:
        "200":
          description: Atualização realizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consultorio'
        "400":
          description: Esse ID não existe.
        "5XX":
          description: Exceção Lançada.
    delete:
      tags:
      - Agendamentos
      summary: deleta um agendamento.
      description: deleta um agendamento no banco de dados
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: exclusão realizada com sucesso
        "400":
          description: Id não encontrado
        "5XX":
          description: Exceção Lançada
  /medicos:
    get:
      tags:
      - Médicos
      summary: Retorna uma lista de médicos.
      description: Retorna uma lista de médicos do banco de dados
      responses:
        "200":
          description: lista retornada com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/consultorio'
        "400":
          description: Erro ao solicitar a lista.
        "5XX":
          description: Exceção lançada.
    post:
      tags:
      - Médicos
      summary: Registra um novo médico.
      description: Cria um médico no banco de dados.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/medico'
        required: true
      responses:
        "200":
          description: Médico cadastrado com sucesso.
        "400":
          description: erro ao cadastrar o Médico.
        "5XX":
          description: Exceção lançada.
  /medicos/{id}:
    get:
      tags:
      - Médicos
      summary: Retorna um médico pelo ID
      description: Retorna um médico pelo ID no banco de dados
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: médico encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/medico'
        "404":
          description: Esse ID não foi encontrado.
        "5XX":
          description: Exceção Lançada.
    put:
      tags:
      - Médicos
      summary: Atualiza o médico pelo Id
      description: Atualiza o médico pelo id no banco de dados
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/medico'
        required: true
      responses:
        "200":
          description: Atualização realizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/medico'
        "400":
          description: Esse ID não existe.
        "5XX":
          description: Exceção Lançada.
    delete:
      tags:
      - Médicos
      summary: deleta um médico.
      description: deleta um médico no banco de dados
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: exclusão realizada com sucesso.
        "400":
          description: Id não encontrado.
        "5XX":
          description: Exceção Lançada.
  /pacientes:
    get:
      tags:
      - Pacientes
      summary: Retorna uma lista de pacientes.
      description: Retorna uma lista de pacientes do banco de dados
      responses:
        "200":
          description: lista retornada com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/paciente'
        "400":
          description: Erro ao solicitar a lista.
        "5XX":
          description: Exceção lançada.
    post:
      tags:
      - Pacientes
      summary: Cria um novo paciente.
      description: Cria um novo paciente no banco de dados.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paciente'
        required: true
      responses:
        "200":
          description: Paciente cadastrado com sucesso.
        "400":
          description: erro ao cadastrar o Paciente.
        "5XX":
          description: Exceção lançada.
  /pacientes/{id}:
    get:
      tags:
      - Pacientes
      summary: Retorna um paciente pelo ID
      description: Retorna um paciente pelo ID no banco de dados
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Consultorio encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paciente'
        "404":
          description: Esse ID não foi encontrado.
        "5XX":
          description: Exceção Lançada.
    put:
      tags:
      - Pacientes
      summary: Atualiza um paciente pelo Id
      description: Atualiza um paciente pelo id no banco de dados
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paciente'
        required: true
      responses:
        "200":
          description: Atualização realizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paciente'
        "400":
          description: Esse ID não existe.
        "5XX":
          description: Exceção Lançada.
    delete:
      tags:
      - Pacientes
      summary: deleta um paciente.
      description: deleta um paciente no banco de dados
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: exclusão realizada com sucesso
        "400":
          description: Id não encontrado
        "5XX":
          description: Exceção Lançada
components:
  schemas:
    fichaAgendamento:
      required:
      - consultorio
      - dataAgendamento
      - dataConsulta
      - especialidadeMedica
      - id
      - medico
      - paciente
      - statusConsulta
      type: object
      properties:
        id:
          type: integer
          format: int64
        paciente:
          $ref: '#/components/schemas/paciente'
        medico:
          $ref: '#/components/schemas/medico'
        especialidadeMedica:
          $ref: '#/components/schemas/especialidadeMedica'
        consultorio:
          $ref: '#/components/schemas/consultorio'
        dataAgendamento:
          type: string
          format: date
        dataConsulta:
          type: string
          format: date
        statusConsulta:
          type: string
          enum:
          - MARCADO
          - CANCELADO
          - REMARCADO
          - REALIZADA
      description: ficha de agendamento da consulta médica.
    consultorio:
      required:
      - cnpj
      - endereco
      - id
      - nomeFantasia
      type: object
      properties:
        id:
          type: integer
          format: int64
        endereco:
          $ref: '#/components/schemas/endereco'
        nomeFantasia:
          type: string
        cnpj:
          type: string
      description: objeto referente aos dados do consultorio médico.
    endereco:
      required:
      - bairro
      - cep
      - cidade
      - estado
      - id
      - rua
      type: object
      properties:
        id:
          type: integer
          format: int64
        rua:
          type: string
        bairro:
          type: string
        cidade:
          type: string
        estado:
          type: string
        cep:
          type: string
      description: Endereço como rua, cep, estado...
    especialidadeMedica:
      required:
      - descricao
      - id
      type: object
      properties:
        id:
          type: integer
          format: int64
        descricao:
          type: string
      description: É a area de atuação do médico
    medico:
      required:
      - cpf
      - crm
      - dataNascimento
      - endereco
      - especialidadeMedica
      - id
      - nome
      - telefone
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        dataNascimento:
          type: string
          format: date
        cpf:
          type: string
        endereco:
          $ref: '#/components/schemas/endereco'
        telefone:
          type: string
        crm:
          type: string
        especialidadeMedica:
          $ref: '#/components/schemas/especialidadeMedica'
      description: Objeto referente ao médico
    paciente:
      required:
      - cpf
      - dataNascimento
      - endereco
      - id
      - nome
      - nomeDaMae
      - telefone
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        dataNascimento:
          type: string
          format: date
        nomeDaMae:
          type: string
        cpf:
          type: string
        endereco:
          $ref: '#/components/schemas/endereco'
        telefone:
          type: string
      description: Objeto referente aos pacientes
